name: CI/CD

on:
  push:

env:
  package-directory: ./package
  POETRY_DYNAMIC_VERSIONING: true

jobs:
  # Job to test and install dependencies for the Python app
    #   test-python-app:
    #     name: Test Python App
    #     runs-on: ubuntu-latest
    #     steps:
    #       - uses: actions/checkout@v4
    #       - uses: actions/setup-python@v5
    #         with:
    #           python-version: "3.11"
    #       - name: Install Poetry
    #         run: |
    #           curl -sSL https://install.python-poetry.org | python3 -
    #           echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
    #           poetry self add poetry-dynamic-versioning
    #           echo "export POETRY_DYNAMIC_VERSIONING=true" >> $GITHUB_ENV
    #       - name: Install dependencies
    #         working-directory: package/
    #         run: poetry install
    #   - name: Run tests
    #     working-directory: package/
    #     run: poetry run pytest
    #   - name: Run Lint
    #     run: poetry run pytest

  publish-python-package:
    name: Publish Python Package
    runs-on: ubuntu-latest
    # needs: test-python-app
    # if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
          poetry self add poetry-dynamic-versioning
          echo "export POETRY_DYNAMIC_VERSIONING=true" >> $GITHUB_ENV
      - name: Install dependencies
        working-directory: ${{env.package-directory}}
        run: |
          poetry install --only main
          poetry build
          poetry publish --username __token__ --password ${{ secrets.PYPI_TOKEN }}

  # Job to build and push the Docker image, only runs on tag

#   build-and-push-docker:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest
#     needs: test-python-app
#     if: startsWith(github.ref, 'refs/tags/')

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build and push Docker image
#         working-directory: application/
#         run: |
#           docker build -t ghcr.io/${{ github.repository_owner }}/application:${{ github.ref_name }} .
#           docker push ghcr.io/${{ github.repository_owner }}/application:${{ github.ref_name }}
